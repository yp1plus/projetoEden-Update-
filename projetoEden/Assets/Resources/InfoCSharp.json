{
    "input":[{"options":["nomeDaVariável", "meu-Nome","1Nome","NOME_JOGADOR","nome_jogador!","nome&sobrenome"]},
    {"options":["nomeDaVariável", "2DGalinhas","qt|galinhas","quant_galinhas","quantGalinhas","g@linhas"]},
    {"options":["nomeDaVariável", "chamaAcesa","destruirChama()","chamaApagada","criarChama()","chama.acesa"]},
    {"options":["nomeDaVariável", "CODIGO_SECRETO","codigo$ecreto","código","####","$ENHA"]},
    {"options":["nomeDaVariável", "altura.","ALTURA-Jogador","_alt_jog_","Altura{Jogador}","altura_jogador"]},
    {"options":["nomeDaVariável", "altura.","ALTURA-Jogador","_alt_jog_","Altura{Jogador}","altura_jogador"]},
    {"options":[null,null,null,null,null]},
    {"options":["Condição","(chamaAcesa)","(quantGalinhas >= 5 || codigo == '/')","(quantGalinhas < 0 && codigo == '!')","(alturaJogador == 0.00)","(quantGalinhas > 30)"]},
    {"options":["Condição","(quantGalinhas == 0 && !chamaAcesa)","(alturaJogador > 50.0 && codigo == '!')","(tamanho(NOME_JOGADOR) != 7)","(alturaJogador < 0.00 || codigo != '!')","(tamanho(NOME_JOGADOR) <= 7)"]},
    {"options":["(Correr())","(Ficar() || Correr())","(!Ficar() && !Correr())","((Ficar() && Correr()) || Ficar())","((Ficar() || Correr()) || Ficar())"]},
    {"options":["Iteração", "for(int i = 0; i < 6; i++)","while(HouverRocha())","for(int i = 5; i <= 0; i--)", "while(HouverVacuo())", "for(int i = 10; i >= 0; i++)"]},
    {"options":["Iteração", "(int i = 0; i < 8; i++)", "(int i = 1; i < 8; i++)", "(int i = 1; i <= 8; i++)", "(int i = 0; i < 4; i++)", "(int i = 0; i > 4; i++)"]},
    {"options":["Iteração","(int i = 0; i < 7; i++)","(int i = 0; i < 6; i++)","(int i = 0; i < 4; i++)", "(int i = 0; i <= 7; i++)", "(int i = 6; i >= 3; i--)"]}
    ],
    "optionsCondition2":
    [
        {"options":["(Ficar())","(Ficar() && Correr())", "(!Ficar() || !Correr())", "((Ficar() && Correr()) && Ficar())", "((Ficar() || Correr()) && Ficar())"]},
        {"options": null},
        {"options": null},
        {"options":["Iteração","(int j = 0; j < 13; j++)", "(int j = 11; j >= 8; j--)", "(int j = 0; j < 12; j++)", "(double j = 0; j < 12; j++)", "(int j = 11; j <= 0; j++)"]}
    ],   
    "resultsStructures1":["PararBloco();","PrenderObjeto();","OBichoPega();", "CriarBloco();", "EliminarLamina()", null],
    "resultsStructures2":[null, "LiberarObjeto();", "OBichoCome();", null, null, "DestruirBloco(i, j);"],
    "descriptionInfo":[
        "Tipo int: representa números inteiros até cerca de 2^31\n\nTipo char: representa um caractere de acordo com a tabela ASCII entre aspas simples\n\nTipo double: representa números decimais. Deve-se utilizar ponto entre os números\n\nTipo string: representa um conjunto de caracteres (palavra). Escreve-se entre aspas duplas\n\nTipo bool: representa os valores true (verdadeiro) ou false (falso)",
        "if: condição \"se\" é verdadeiro faça algo\n\nelse if: condição \"senão se\" que vem após um if que não foi executado e testa outra condição\n\nelse: condição \"senão\" que faz algo caso nenhuma das condições anteriores seja verdadeira\n\n==: representa igualdade, se algo é igual a outro\n\n&&: representa a condição E, só retorna verdadeiro se as duas proposições são verdadeiras\n\n||: representa a condição OU, basta que uma proposição seja verdadeira para retornar verdadeiro\n\n!: nega a proposição, se é verdadeira torna-se falsa e vice-versa.\n\n<: se um valor é menor do que o outro\n\n>: se um valor é maior do que o outro\n\n>=: se um valor é maior ou igual a outro\n\n<=: se um valor é menor ou igual a outro",
        "while(condição): enquanto a condição for verdadeira, repete a ação\n\nfor(int i = valor_inicial; condição; incrementa 1 (++) ou decrementa 1 (--)): repete um número de vezes estabelecido determinado pela condição"
    ],
    "namesCameras":["string CAMERA_A99", "string CAMERA_A98", "string CAMERA_A97"]
}